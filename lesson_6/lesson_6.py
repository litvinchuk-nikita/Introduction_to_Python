from random import randrange
# Задача 39.
# Даны два массива чисел.
# Требуется вывести те элементы первого массива
# (в том порядке, в каком они идут в первом массиве),
# которых нет во втором массиве.
# Пользователь вводит число N - количество элементов в первом массиве,
# затем N чисел - элементы массива.
# Затем число M - количество элементов во втором массиве.
# Затем элементы второго массива.

n = int(input('Введите количество элементов в первом списке: '))
list_1 = [randrange(1, 10) for i in range(n)]
print(list_1)
n = int(input('Введите количество элементов во втором списке: '))
list_2 = [randrange(1, 10) for i in range(n)]
print(list_2)


# Вариант 1.
def func_1(list_1, list_2):
    for num in list_1:
        if num not in list_2:
            print(num, end=' ')


# Вариант 2.
def func_2(list_1, list_2):
    result = []
    for num in list_1:
        if num not in list_2:
            result.append(num)
    return result


print(*func_2(list_1, list_2))
func_1(list_1, list_2)


# Задача 41.
# Дан массив, состоящий из целых чисел.
# Напишите программу, которая в данном массиве определит количество элементов,
# у которых два соседних и, при этом, оба соседних элемента меньше данного.
# Сначала вводится число N — количество элементов в массиве.
# Далее записаны N чисел — элементы массива.
# Массив состоит из целых чисел.
n = int(input('Введите количество элементов в списке: '))
list_3 = [randrange(1, 6) for i in range(n)]
print(list_3)


def func_3(list):
    count = 0
    i = 0
    for num in list[1:-1]:
        print(list[i], num, list[i+2])
        if list[i] < num > list[i+2]:
            count += 1
        i += 1
    return count


print(func_3(list_3))


# Задача 43.
# Дан список чисел.
# Посчитайте, сколько в нем пар элементов, равных друг другу.
# Считается, что любые два элемента,
# равные друг другу образуют одну пару, которую необходимо посчитать.
# Вводится список чисел.
# Все числа списка находятся на разных строках.
list_4 = [1, 2, 3, 4, 1, 2, 3, 5, 3, 1, 3, 6, 6]


def func_4(list_4):
    dict_1 = {}
    count = 0
    for num in list_4:
        if num not in dict_1:
            dict_1[num] = list_4.count(num)
    print(dict_1)
    for val in dict_1.values():
        print(val)
        count += val // 2
    return f'Всего пар - {count}'


print(func_4(list_4))

# Решение с семинара.
N = int(input('Введите N: '))
print(N)
li1 = [int(input('Введите число: ')) for _ in range(N)]
print(*li1)
n = 0
d = {}
for i in li1:
    if i in d:
        n += d[i]
    d[i] = d.get(i, 0) + 1

print(n)

# Задача 45.
# Два различных натуральных числа n и m называются дружественными,
# если сумма делителей числа n (включая 1, но исключая само n) равна числу m и наоборот.
# Например, 220 и 284 – дружественные числа.
# По данному числу k выведите все пары дружественных чисел, каждое из которых не превосходит k.
# Программа получает на вход одно натуральное число k, не превосходящее 105.
# Программа должна вывести все пары дружественных чисел, каждое из которых не превосходит k.
# Пары необходимо выводить по одной в строке, разделяя пробелами.
# Каждая пара должна быть выведена только один раз (перестановка чисел новую пару не дает).

# Решение с семинара.
k = int(input('Введите k: '))

lst = []
for i in range(k):
    summa = 0
    for j in range(1, i//2+1):
        if i % j == 0:
            summa += j
    lst.append([i, summa])
for i in range(len(lst)):
    for j in range(i+1, len(lst)):
        if lst[i][0] == lst[j][1] and lst[i][1] == lst[j][0]:
            print(lst[i][0], lst[j][0])
